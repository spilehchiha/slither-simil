{('contracts/GolemNetworkTokenBatching_inst.sol', 'GolemNetworkTokenBatching', 'batchTransfer'): ['index(uint256)', '(local_solc_variable(default)):=(reference(uint256))', 'type_conversion(address)', '(local_solc_variable(default)):=(temporary_variable)', 'type_conversion(uint256)', 'binary(**)', 'binary(/)', '(local_solc_variable(default)):=(temporary_variable)', 'binary(<=)', 'solidity_call(require(bool))', 'index(uint256)', 'binary(+)', 'binary(-)', 'event', 'index(uint256)', '(reference(uint256)):=(local_solc_variable(default))'], ('contracts/GolemNetworkTokenBatching_inst.sol', 'TokenProxy', 'withdraw'): ['internal_call(tuple)'], ('contracts/TokenProxy.sol', 'TokenProxy', 'transferFromGate'): ['(local_solc_variable(default)):=(solidity_variable_composed(msg.sender))', 'index(address)', '(local_solc_variable(default)):=(reference(address))', 'binary(!=)', 'solidity_call(require(bool))', 'high_level_call', '(local_solc_variable(default)):=(temporary_variable)', 'type_conversion(user_defined_type)', 'high_level_call', 'binary(+)', 'index(uint256)', 'binary(+)', 'event'], ('contracts/GNTDeposit.sol', 'GNTDeposit', 'burn'): ['internal_call(tuple)', 'event', 'internal_call(Modifier)'], ('contracts/GNTDeposit.sol', 'GNTDeposit', 'withdraw'): ['index(uint256)', '(local_solc_variable(default)):=(reference(uint256))', 'index(uint256)', '(reference(uint256)):=(constant(uint256))', 'index(uint256)', '(reference(uint256)):=(constant(uint256))', 'high_level_call', 'solidity_call(require(bool))', 'event', 'internal_call(Modifier)'], ('contracts/GNTDeposit.sol', 'GNTDeposit', 'onTokenReceived'): ['index(uint256)', 'binary(+)', 'event', 'internal_call(Modifier)'], ('contracts/PAXImplementation.sol', 'PAXImplementation', 'setSupplyController'): ['binary(==)', 'binary(==)', 'binary(||)', 'solidity_call(require(bool,string))', 'type_conversion(address)', 'binary(!=)', 'solidity_call(require(bool,string))', 'event', '(state_solc_variable(address)):=(local_solc_variable(memory))'], ('contracts/PAXImplementation.sol', 'PAXImplementation', 'increaseSupply'): ['library_call', '(state_solc_variable(uint256)):=(temporary_variable)', 'index(uint256)', 'index(uint256)', 'library_call', '(reference(uint256)):=(temporary_variable)', 'event', 'type_conversion(address)', 'event', 'return', 'internal_call(Modifier)'], ('contracts/PAXImplementation.sol', 'PAXImplementation', 'decreaseSupply'): ['index(uint256)', 'binary(<=)', 'solidity_call(require(bool,string))', 'index(uint256)', 'index(uint256)', 'library_call', '(reference(uint256)):=(temporary_variable)', 'library_call', '(state_solc_variable(uint256)):=(temporary_variable)', 'event', 'type_conversion(address)', 'event', 'return', 'internal_call(Modifier)'], ('contracts/PAXImplementation.sol', 'PAXImplementation', 'wipeFrozenAddress'): ['index(bool)', 'solidity_call(require(bool,string))', 'index(uint256)', '(local_solc_variable(default)):=(reference(uint256))', 'index(uint256)', '(reference(uint256)):=(constant(uint256))', 'library_call', '(state_solc_variable(uint256)):=(temporary_variable)', 'event', 'event', 'type_conversion(address)', 'event', 'internal_call(Modifier)'], ('contracts/PAXImplementation.sol', 'PAXImplementation', 'setLawEnforcementRole'): ['binary(==)', 'binary(==)', 'binary(||)', 'solidity_call(require(bool,string))', 'event', '(state_solc_variable(address)):=(local_solc_variable(memory))'], ('contracts/PAXImplementation.sol', 'PAXImplementation', 'transfer'): ['type_conversion(address)', 'binary(!=)', 'solidity_call(require(bool,string))', 'index(bool)', 'unary(!)', 'index(bool)', 'unary(!)', 'binary(&&)', 'solidity_call(require(bool,string))', 'index(uint256)', 'binary(<=)', 'solidity_call(require(bool,string))', 'index(uint256)', 'index(uint256)', 'library_call', '(reference(uint256)):=(temporary_variable)', 'index(uint256)', 'index(uint256)', 'library_call', '(reference(uint256)):=(temporary_variable)', 'event', 'return', 'internal_call(Modifier)']}
